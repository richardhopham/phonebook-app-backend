{"version":3,"sources":["components/Person.js","components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Person","name","number","deletePerson","onClick","Persons","persons","map","person","id","Filter","props","value","newFilter","onChange","handleNewFilter","PersonForm","onSubmit","addPerson","nameChange","numberChange","type","baseUrl","getAll","axios","get","then","response","data","create","newObject","post","update","put","del","delete","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","addMessage","setAddMessage","duplicateMessage","setDuplicateMessage","deleteMessage","setDeleteMessage","personsFilter","length","filter","toLowerCase","startsWith","useEffect","personService","initialNotes","event","target","preventDefault","nameObject","find","setTimeout","returnedPerson","concat","window","confirm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6819d34c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ name, number, deletePerson }) => {\r\n    return (\r\n        <li key={name}>\r\n            {name} {number}\r\n            <button onClick={deletePerson}>Delete</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n    return (\r\n        <ul>\r\n            {persons.map(person => <Person key={person.name} name={person.name} number={person.number} deletePerson={() => deletePerson(person.id, person.name)}/>)}\r\n        </ul>\r\n    )\r\n\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <div>\r\n            filter show with <input value={props.newFilter} onChange={props.handleNewFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n return (\r\n  <form onSubmit={props.addPerson}>\r\n   <div>\r\n    name: <input value={props.name} onChange={props.nameChange}/>\r\n   </div>\r\n   <div>\r\n    number: <input value={props.number} onChange={props.numberChange}/>\r\n   </div>\r\n   <div>\r\n    <button type=\"submit\">add</button>\r\n   </div>\r\n  </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nfunction getAll() {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, del }","const Notification = ({ message }) => {\r\n    if(message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            { message }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ addMessage, setAddMessage ] = useState('')\n  const [ duplicateMessage, setDuplicateMessage ] = useState('')\n  const [ deleteMessage, setDeleteMessage ] = useState('')\n\n  const personsFilter = newFilter.length === 0 ? persons : persons.filter(person => person.name.toLowerCase().startsWith(newFilter.toLowerCase()))\n \n  useEffect(() => {\n    personService.getAll()\n    .then(initialNotes => {\n      setPersons(initialNotes)\n    })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    if(persons.find(person => person.name === newName)) {\n      setDuplicateMessage(\n        `${newName} has already been added to the phonebook`\n      )\n      setTimeout(() => {\n        setDuplicateMessage(null)\n      }, 5000)\n    } else {\n      personService.create(nameObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setAddMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setAddMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n    }\n  }\n\n  const deletePerson = (id, name) => {\n    if(window.confirm(`Delete ${name}?`))\n      personService.del(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n        setDeleteMessage(\n          `Deleted ${name}`\n        )\n        setTimeout(() => {\n          setDeleteMessage(null)\n        }, 5000)\n      })\n      \n  }\n\n  const handleNewName = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleNewFilter = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={addMessage} />\n      <Notification message={duplicateMessage} />\n      <Notification message={deleteMessage} />\n      <Filter newFilter={newFilter} handleNewFilter={handleNewFilter} />\n      <h3>add a new </h3>\n      <PersonForm name={newName} nameChange = {handleNewName} number={newNumber} numberChange={handleNewNumber} addPerson={addPerson} />\n      <h2>Numbers</h2>\n      <ul>\n        <Persons persons={personsFilter} deletePerson={deletePerson}/>\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}